var sqlite3 = require('sqlite3').verbose();
var db = new sqlite3.Database('./database/BBDD.db');
var jwt = require('jwt-simple');
var secret = '123';

database = {
    createModel:function(){
        db.serialize(function() {
            var TypePoint=["Semáforo acústico","Rampa de acceso","Servicio adaptado","Puntos de información","Ascensor","Parking adaptado","Otros"];
            var TypeDesc=["Semáforos con timbre para personas invidentes",
            "Rampas de acceso alternativas a las escaleras","Baños públicos preparados y con acceso adaptado",
            "Oficionas de turismo adaptado","Ascensor con acceso adaptado","Parking adaptado","Si el punto no encaja con los anteriores"];
            console.log("Borrando base de datos...")
            db.run('DROP TABLE IF EXISTS usuario');
            db.run('DROP TABLE IF EXISTS point');
            db.run('DROP TABLE IF EXISTS type');
            console.log("Se han eliminado todas las tablas de la base de datos")

            console.log("Creando base de datos y ejecutando seeders...");
            db.run('PRAGMA foreign_keys = ON');
            db.run('CREATE TABLE usuario (name TEXT PRIMARY KEY,token TEXT)');
            var stmt = db.prepare('INSERT INTO usuario VALUES (?,?)');
            stmt.run("root",jwt.encode(1,secret));
            stmt.finalize();

            db.run('CREATE TABLE type (id INTEGER PRIMARY KEY,type_name TEXT,desc TEXT)');
            stmt = db.prepare('INSERT INTO type VALUES (?,?,?)');
            for(var i = 0;i<TypePoint.length;i++){
                stmt.run(null,TypePoint[i],TypeDesc[i]);
            }
            stmt.finalize();          
           
            db.run('CREATE TABLE point (id INTEGER PRIMARY KEY,name TEXT,coordX TEXT,coordY TEXT,coordZ TEXT,type INTEGER, CONSTRAINT fk_type_point FOREIGN KEY(type) REFERENCES type(id) ON DELETE SET NULL)');
            stmt = db.prepare('INSERT INTO point VALUES (?,?,?,?,?,?)');
            var i = 0;
            for (i; i < 10; i++) {
              stmt.run(null,"Punto "+i,0,0,0,Math.floor(Math.random() * (6 - 1)) + 1);
            }
            var parkingPoint = ['-0.5108844,38.3818903,0','-0.5108656,38.3818472,0','-0.5108522,38.3818146,0','-0.5108388,38.3817726,0','-0.5100408,38.3820932,0','-0.5100261,38.3820554,0','-0.5100127,38.3820291,0','-0.5099992,38.3819891,0','-0.5089505,38.382355,0','-0.5089304,38.3823108,0','-0.5089143,38.3822719,0','-0.5089009,38.382233,0','-0.5083416,38.3828428,0','-0.508284,38.3828543,0','-0.5093609,38.3840381,0','-0.5093797,38.3840854,0','-0.5093931,38.3841148,0','-0.5094092,38.38416,0','-0.5094226,38.3841905,0','-0.509436,38.3842346,0','-0.5094467,38.3842672,0','-0.5094668,38.3843145,0','-0.5094776,38.3843429,0','-0.5095124,38.3844323,0','-0.5120914,38.3874041,0','-0.5120364,38.3874177,0','-0.5119948,38.3874261,0','-0.5119412,38.3874419,0','-0.5139783,38.3882187,0','-0.5139649,38.3881777,0','-0.5147481,38.3880653,0','-0.5147253,38.388018,0','-0.5153154,38.3874451,0','-0.5153006,38.387402,0','-0.5172506,38.3872275,0','-0.5172184,38.3871844,0','-0.5177723,38.3856118,0','-0.5177052,38.3856244,0','-0.5177321,38.3854898,0','-0.5176663,38.3855056,0','-0.5171728,38.3849421,0','-0.5171594,38.3848959,0','-0.5171473,38.3848675,0','-0.5171299,38.3848212,0','-0.5172506,38.3832317,0','-0.5172627,38.3832622,0','-0.5173928,38.3832275,0','-0.5173847,38.3832002,0','-0.5173619,38.3831476,0','-0.5173512,38.3831161,0','-0.5172318,38.3831823,0','-0.5172171,38.3831466,0','-0.5171956,38.3831024,0','-0.5171822,38.3830656,0','-0.5173337,38.3830667,0','-0.517319,38.383032,0','-0.515715,38.3818493,0','-0.5156989,38.3818041,0','-0.5156882,38.3817726,0','-0.5156694,38.3817295,0','-0.5143645,38.3821857,0','-0.5143458,38.3821426,0','-0.5134566,38.3820638,0','-0.5134392,38.3820207,0','-0.513411,38.381945,0','-0.5133936,38.3818977,0','-0.5162676,38.3855235,0','-0.5162019,38.3855413,0','-0.5162314,38.3854383,0','-0.5161683,38.3854572,0'];
            parkingPoint.forEach(element => {                
                var elementAux = element.split(',');
                stmt.run(null,"Punto "+i,elementAux[0],elementAux[1],elementAux[2],6);
                i++;
            });
            var wcPoint = ['-0.511575,38.3868207,0','-0.5113162,38.3868785,0','-0.5116837,38.3867502,0','-0.5140936,38.3872285,0','-0.5140802,38.3871886,0','-0.5145939,38.3853826,0','-0.5128652,38.3860102,0','-0.5108804,38.3837773,0','-0.5108052,38.3836028,0','-0.5127016,38.3832507,0','-0.511917,38.3821763,0','-0.5133715,38.387999,0','-0.5127368,38.3857941,0','-0.5158076,38.3827187,0','-0.513462,38.3829952,0','-0.5135331,38.3829721,0','-0.5135424,38.3829658,0','-0.5135478,38.3829553,0','-0.5113417,38.3826451,0','-0.5112264,38.3826693,0','-0.5104204,38.3846604,0','-0.5103037,38.3841589,0','-0.5172493,38.3855687,0','-0.5134419,38.3879906,0','-0.5183101,38.3871896,0'];
            wcPoint.forEach(element => {                
                var elementAux = element.split(',');
                stmt.run(null,"Punto "+i,elementAux[0],elementAux[1],elementAux[2],3);
                i++;
            });
            var ascensores = ['-0.5108441,38.3849894,0','-0.5102661,38.384571,0','-0.5101977,38.3844176,0','-0.5110855,38.3833211,0','-0.5116354,38.3822351,0','-0.5108991,38.3824475,0','-0.5100811,38.3829248,0','-0.5100247,38.3827734,0','-0.5099604,38.3826199,0','-0.5124226,38.3821237,0','-0.5119438,38.3834136,0','-0.5141312,38.382909,0','-0.5142385,38.3829584,0','-0.5161428,38.3835587,0','-0.5165218,38.383462,0','-0.5170437,38.386049,0','-0.5169542,38.3858031,0','-0.5155152,38.3865928,0','-0.5156171,38.3869005,0','-0.5125809,38.3881378,0','-0.5122939,38.3873883,0','-0.5121665,38.3869878,0','-0.5115925,38.3867555,0','-0.5130697,38.3846696,0','-0.5159028,38.3868701,0','-0.5150941,38.3886445,0','-0.5145013,38.3860217,0','-0.5112602,38.3827056,0','-0.5115744,38.3826112,0','-0.5119891,38.3822294,0','-0.5155699,38.3851235,0','-0.5146586,38.3854081,0','-0.51727,38.385997,0','-0.5147139,38.3839214,0','-0.5171825,38.3857516,0','-0.5150441,38.3871515,0','-0.5133104,38.3829521,0','-0.5127525,38.3832402,0','-0.5124079,38.3830646,0','-0.5124052,38.38336,0','-0.5123784,38.3833663,0','-0.5105129,38.3827408,0','-0.511744,38.3849358,0','-0.5116153,38.3846499,0','-0.5112948,38.3810924,0','-0.5111285,38.3811019,0','-0.5168912,38.3849242,0','-0.5118755,38.3861058,0','-0.5124414,38.3876974,0','-0.5150364,38.3871339,0','-0.5155085,38.3865768,0','-0.5156171,38.3869005,0','-0.5136256,38.3881473,0','-0.5177173,38.3871518,0','-0.5182792,38.3871865,0','-0.5191657,38.388039,0','-0.5197638,38.3878792,0','-0.5198926,38.3879171,0','-0.5198443,38.3880915,0','-0.5198255,38.3881588,0','-0.5202493,38.3878792,0'];
            ascensores.forEach(element => {                
                var elementAux = element.split(',');
                stmt.run(null,"Punto "+i,elementAux[0],elementAux[1],elementAux[2],5);
                i++;
            });
            
            stmt.finalize();
          });
    },
    close:function(){
        db.close();
    }
}
module.exports = database;